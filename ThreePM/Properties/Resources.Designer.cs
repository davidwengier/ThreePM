//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreePM.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ThreePM.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;skin name=&quot;Default&quot;&gt;
        ///  &lt;form type=&quot;All&quot;&gt;
        ///    &lt;property name=&quot;ForeColor&quot; type=&quot;Color&quot; value=&quot;Red&quot; /&gt;
        ///    &lt;property name=&quot;Font&quot; type=&quot;Font&quot; value=&quot;Tahoma, 9pt&quot; /&gt;
        ///    &lt;property name=&quot;BackColor&quot; type=&quot;Color&quot; value=&quot;Black&quot; /&gt;
        ///
        ///    &lt;property name=&quot;InternalBorderAtTop&quot; type=&quot;bool&quot; value=&quot;false&quot; /&gt;
        ///    &lt;property name=&quot;Sizable&quot; type=&quot;bool&quot; value=&quot;true&quot; /&gt;
        ///    &lt;property name=&quot;RoundedRadius&quot; type=&quot;int&quot; value=&quot;1&quot; /&gt;
        ///    &lt;property name=&quot;RoundedForm&quot; type=&quot;bool&quot; value=&quot;f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Blank_skin {
            get {
                return ResourceManager.GetString("Blank_skin", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap CloseButton {
            get {
                object obj = ResourceManager.GetObject("CloseButton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;skin name=&quot;Default&quot;&gt;
        ///  &lt;form type=&quot;All&quot;&gt;
        ///    &lt;property name=&quot;ForeColor&quot; type=&quot;Color&quot; value=&quot;Black&quot; /&gt;
        ///    &lt;property name=&quot;Font&quot; type=&quot;Font&quot; value=&quot;Tahoma, 8pt&quot; /&gt;
        ///    &lt;property name=&quot;BackColor&quot; type=&quot;Color&quot; value=&quot;238,243,250&quot; /&gt;
        ///
        ///    &lt;property name=&quot;InternalBorderAtTop&quot; type=&quot;bool&quot; value=&quot;true&quot; /&gt;
        ///    &lt;property name=&quot;Sizable&quot; type=&quot;bool&quot; value=&quot;true&quot; /&gt;
        ///    &lt;property name=&quot;RoundedRadius&quot; type=&quot;int&quot; value=&quot;9&quot; /&gt;
        ///    &lt;property name=&quot;RoundedForm&quot; type=&quot;bool&quot; v [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Default_skin {
            get {
                return ResourceManager.GetString("Default_skin", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap FastForward {
            get {
                object obj = ResourceManager.GetObject("FastForward", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap LoadingAlbumArt {
            get {
                object obj = ResourceManager.GetObject("LoadingAlbumArt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap MinimizeButton {
            get {
                object obj = ResourceManager.GetObject("MinimizeButton", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Music {
            get {
                object obj = ResourceManager.GetObject("Music", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap NoAlbumArt {
            get {
                object obj = ResourceManager.GetObject("NoAlbumArt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Pause {
            get {
                object obj = ResourceManager.GetObject("Pause", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Play {
            get {
                object obj = ResourceManager.GetObject("Play", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Queue {
            get {
                object obj = ResourceManager.GetObject("Queue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Rewind {
            get {
                object obj = ResourceManager.GetObject("Rewind", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Stop {
            get {
                object obj = ResourceManager.GetObject("Stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Window {
            get {
                object obj = ResourceManager.GetObject("Window", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
